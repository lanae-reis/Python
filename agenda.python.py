# -*- coding: utf-8 -*-
"""Atividade Ativa 5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FWvsJur4Yk0KfeduR4Vo7rQLLbFBUna5
"""

def arquivo_relatorio(contato):
  '''
  Função para criar o arquivo de texto com os contatos cadastrados no sistema
  '''
  cont=0
  
  with open("relatorio_contatos.txt", "w") as arq:
    arq.write("Num  \t  Nome \t Telefone \t E-mail \t\t Twitter \t Instagram \n")
    for key in contato.keys():
      cont=cont+1
      arq.write(str(cont)+"\t\t")
      arq.write(str(contato[key]["nome"])+"\t\t")
      arq.write(str(contato[key]["telefone"])+"\t\t")
      arq.write(str(contato[key]["email"])+"\t\t")
      arq.write(str(contato[key]["twitter"])+"\t\t")
      arq.write(str(contato[key]["instagram"])+"\t\n")

def adicionar_contato(contato):
  quant= int(input("Quantos contatos deseja adicionar?\n"))
  controle=0
  '''
    Função para adicionar a quantidade de contatos informados 
  '''
  print("\n------Adicionar Contato-----\n")
  while controle < quant:#cadastrar quantidade x de contatos
    nome = input("Nome:").strip()
    telefone = input("Telefone:").strip()
    email= input("E-mail:").strip()
    twitter= input("Usuário do Twitter:").strip()
    instagram = input("Usuário do Instagram:").strip()

    contato[nome.lower()] = {
        "nome": nome,
        "telefone": telefone,
        "email": email,
        "twitter": twitter,
        "instagram": instagram
    }

    print("Contato {} cadastrado com sucesso!\n".format(nome))
      
    controle+=1

def pesquisa_chaves(contato, consulta):
  '''
  Função para pesquisar todos os contatos que se encaixam com o nome digitado na consulta 
  '''
  user = [ ]#lista para armazenar contatos encontrados
  for i in contato:
    if i.startswith(consulta):
      user.append(i)
  return user

def consultar_contato(contato):
  '''
    Função para buscar contato a partir do nome indicado na variavel consulta
  '''
 

  print("\n------Consultar Contato-----\n")
  if len(contato)>0:
    consulta= input("Nome para consulta:").lower()
    user_encontrados = pesquisa_chaves(contato, consulta)
    cont=0
  if len(user_encontrados)>0:
    print("\nContatos encontrados:\n")
    for user in user_encontrados:
      cont= cont+1#enumerar contatos 
      print("Contato:", cont)#saida de dados
      print("\nNome:", contato[user]["nome"])
      print("\nTelefone:", contato[user]["telefone"])
      print("\nEmail:", contato[user]["email"])
      print("\nTwitter:", contato[user]["twitter"])
      print("\nInstagram:", contato[user]["instagram"])
      print("\n---------------------------------------\n")
      
  else: 
    print("Usuário não encontrado")

def alterar_contato(contato):
  '''
  Função para alterar dados do contato
  '''

  print("\n------Alterar dados do Contato-----\n")
  consulta= input("Nome do contato:").lower()#input nome do contato 
  user_encontrados = pesquisa_chaves(contato, consulta)
  print("\nContatos encontrados:\n")
  
  if len(user_encontrados)>0:
    for user in user_encontrados:#mostrar todos os usuários compativeis 
      print("\n***********************")
      print("\nNome:", contato[user]["nome"])
      print("\nTelefone:", contato[user]["telefone"])
      print("\nEmail:", contato[user]["email"])
      print("\nTwitter:", contato[user]["twitter"])
      print("\nInstagram:", contato[user]["instagram"])
      print("------------------------------------------\n")
    user= input("Nome do contato que deseja alterar:").lower()#confirmar contato para alteração
    if user in contato.keys():
      print("O que deseja alterar?\n")
      option=int(input("1)Telefone\t 2)E-mail\t 3)Twitter\t 4)Instagram\t\n"))

      if option==1:#alterar telefone
        update=input("\nNovo número:")
        contato[user]["telefone"]=update
        print("\nNome:", contato[user]["nome"])
        print("\nTelefone:", contato[user]["telefone"])
        print("\nTelefone atualizado com sucesso ")
        print("------------------------------------------\n")

      elif option==2: #alterar email
        update=input("\nNovo e-mail:")
        contato[user]["email"]=update
        print("\nNome:", contato[user]["nome"])
        print("\nE-mail:", contato[user]["email"])
        print("\nE-mail atualizado com sucesso ")
        print("------------------------------------------\n")

      elif option==3: #alterar twitter
        update=input("\nNovo usuário do Twitter:")
        contato[user]["twitter"]=update
        print("\nNome:", contato[user]["nome"])
        print("\nTwitter:", contato[user]["twitter"])
        print("\nTwitter atualizado com sucesso ")
        print("------------------------------------------\n")

      elif option==4: #alterar Instagram
        update=input("\nNovo usuário do Instagram:")
        contato[user]["instagram"]=update
        print("\nNome:", contato[user]["nome"])
        print("\nInstagram:", contato[user]["instagram"])
        print("\nInstagram atualizado com sucesso ")
        print("------------------------------------------\n")

      else:#else para comando de 
        print("\nComando inválido, tente novamente")
        print("------------------------------------------\n")
 
    else:#else para caso o contato não for compativel com nenhuma key
      print("Contato Inválido")  

  else:#else caso não retorne nenhum contato 
    print("Usuário não encontrado")

def excluir_contato(contato):
  '''
    Função para excluir dados do contato
  '''
  
  print("\n------Excluir Contato-----\n")
  if len(contato)>0:
    consulta= input("Nome do contato:").lower()#input nome do contato 
    user_encontrados = pesquisa_chaves(contato, consulta)

    print("\nContatos encontrados:\n")
  
    for user in user_encontrados:
      print("\n***********************")
      print("\nNome:", contato[user]["nome"])
      print("\nTelefone:", contato[user]["telefone"])
      print("\nEmail:", contato[user]["email"])
      print("\nTwitter:", contato[user]["twitter"])
      print("\nInstagram:", contato[user]["instagram"])
      print("------------------------------------------\n")
    user= input("Nome do contato que deseja excluir:").lower()
    if user in contato.keys():
      print("O contato selecionado será apagado, deseja continuar?\n")
      print("1)Sim\t 2)Não\n")
      conf=int(input())
      if conf==1:#confirmação de exclusão do contato 
        del contato[user]
        print("Contato excluído com sucesso")
        print("------------------------------------------\n")
      elif conf==2:
        print("Operação Cancelada")
        print("\n------------------------------------------\n")
      else:
        print("Comando inválido, por favor tente novamente")

  else: #else caso não retorne nenhum contato 
    print("Não há contatos cadastrados no sistema")

def listar(contato):
  '''
   Função para listar todos os contatos do dicionario
  '''
  print("\n------Lista de Contatos-----\n")
  if len(contato)>0:
    cont=0
    for i in contato.keys():
      cont= cont+1
      print("Num  \tNome \t\t Telefone \t E-mail \t Twitter \t Instagram ")
      print(cont,"\t",contato[i]["nome"],"\t\t",contato[i]["telefone"],"\t",contato[i]["email"],"\t",contato[i]["twitter"],"\t",contato[i]["instagram"],"\n" )
  else: 
    print("Não há contatos cadastrados no sistema")

contato={}

#@title
#bloco menu do programa
def menu():
  
  
  while True:
    print("\n------------------")
    print("│ Menu Principal │")
    print("------------------\n")
    print("1) Adicionar contato")
    print("2) Consultar contato")
    print("3) Alterar contato")
    print("4) Excluir contato")
    print("5) Listar contatos")
    print("6) Sair")
    operacao = int(input("O que deseja realizar?\n"))

    if operacao == 1:
      adicionar_contato(contato)
      arquivo_relatorio(contato)
    elif operacao == 2:
      consultar_contato(contato)
    elif operacao == 3:
      alterar_contato(contato)
      arquivo_relatorio(contato)
    elif operacao == 4:
      excluir_contato(contato)
      arquivo_relatorio(contato)
    elif operacao == 5:
      listar(contato)
    elif operacao == 6:
      print("\nEncerrando agenda")
      break
      
    else:
      print("Opção inválida! Por favor tente novamente.")


menu()